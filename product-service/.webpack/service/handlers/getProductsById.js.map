{"version":3,"file":"handlers/getProductsById.js","mappings":";;;;;;;;;;;;;;;;;;;AAA0D;AAC1D;AACA,MAAMC,MAAM,GAAG,WAAW,CAAC,CAAC;AAC5B;AACA,MAAMC,SAAS,GAAG,IAAIF,oEAAc,CAAC;EACjCG,UAAU,EAAE,QAAQ;EACpBC,WAAW,EAAE;IACTC,WAAW,EAAE,sBAAsB;IACnCC,eAAe,EAAE,0CAA0C;IAC3DC,YAAY,EAAE;EAClB,CAAC;EACDC,MAAM,EAAE;AACZ,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACZ6D;AACtB;AAEzC,MAAME,eAAe,GAAG;EACpB;EACAC,kBAAkB,EAAE,KAAK;EAAE;EAC3B;EACAC,qBAAqB,EAAE,KAAK;EAAE;EAC9B;EACAC,yBAAyB,EAAE,KAAK,CAAE;AACtC,CAAC;;AAED,MAAMC,iBAAiB,GAAG;EACtB;EACAC,WAAW,EAAE,KAAK,CAAE;AACxB,CAAC;;AAED,MAAMC,eAAe,GAAG;EAAEN,eAAe;EAAEI;AAAkB,CAAC;;AAE9D;AACA,MAAMG,YAAY,GAAGR,8EAA2B,CAACP,kDAAS,EAAEc,eAAe,CAAC;;;;;;;;;;;ACpB5E;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;ACNgD;AACG;AAE5C,MAAMI,eAAe,GAAG,MAAOC,KAAK,IAAK;EAC9C,MAAMC,iBAAiB,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;EACzD,MAAMC,sBAAsB,GAAGH,OAAO,CAACC,GAAG,CAACG,yBAAyB;EAEpE,IAAI;IACF,MAAMC,SAAS,GAAGP,KAAK,CAACQ,cAAc,CAACD,SAAS;IAChD,MAAME,OAAO,GAAG,CAAC,MAAMb,8DAAiB,CACpC,IAAIE,6DAAU,CAAC;MACXa,SAAS,EAAEV,iBAAiB;MAC5BW,GAAG,EAAE;QACDC,EAAE,EAAEN;MACR;IACJ,CAAC,CAAC,CACL,EAAEO,IAAI;IAEP,MAAMC,iBAAiB,GAAG,CAAC,MAAMnB,8DAAiB,CAC9C,IAAIE,6DAAU,CAAC;MACXa,SAAS,EAAEN,sBAAsB;MACjCO,GAAG,EAAE;QACDI,UAAU,EAAET;MAChB;IACJ,CAAC,CAAC,CACL,EAAEO,IAAI,CAACG,KAAK;IAEb,IAAI,CAACR,OAAO,IAAI,CAACM,iBAAiB,EAAE;MAClC,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IACA,OAAO;MACLC,UAAU,EAAE,GAAG;MACfC,OAAO,EAAE;QACP,6BAA6B,EAAE,GAAG;QAClC,kCAAkC,EAAE,IAAI;QACxC,8BAA8B,EAAE;MAClC,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAC,GAAGd,OAAO;QAAEQ,KAAK,EAAEF;MAAkB,CAAC;IAC9D,CAAC;EACH,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,OAAO;MACLL,UAAU,EAAE,GAAG;MACfE,IAAI,EAAEG,KAAK,IAAI;QAAEC,OAAO,EAAE;MAAoC;IAChE,CAAC;EACH;AACF,CAAC,C","sources":["webpack://product-service/./handlers/ddb-client.js","webpack://product-service/./handlers/ddb-doc-client.js","webpack://product-service/external commonjs \"@aws-sdk/client-dynamodb\"","webpack://product-service/external commonjs \"@aws-sdk/lib-dynamodb\"","webpack://product-service/external commonjs \"source-map-support/register\"","webpack://product-service/webpack/bootstrap","webpack://product-service/webpack/runtime/compat get default export","webpack://product-service/webpack/runtime/define property getters","webpack://product-service/webpack/runtime/hasOwnProperty shorthand","webpack://product-service/webpack/runtime/make namespace object","webpack://product-service/./handlers/getProductsById.js"],"sourcesContent":["import { DynamoDBClient } from \"@aws-sdk/client-dynamodb\";\r\n// Set the AWS Region.\r\nconst REGION = \"us-east-1\"; //e.g. \"us-east-1\"\r\n// Create an Amazon DynamoDB service client object.\r\nconst ddbClient = new DynamoDBClient({\r\n    apiVersion: \"latest\",\r\n    credentials: {\r\n        accessKeyId: \"ASIATHMZAGEGJM4CYJJ5\",\r\n        secretAccessKey: \"0b1ogK3ELxXPUz4Y2d7k5hFQqq3ZIK0uFce36uqb\",\r\n        sessionToken: \"IQoJb3JpZ2luX2VjEAMaCXVzLWVhc3QtMSJHMEUCIQCkvX9D3/V7AdmyhmR3drCjR6PCPkOy+rUgKGdC5vB1zAIgdK9jc5/E1HJXdJfzXGJHzg5ydS3McUHk0o7V//QVOSgqoAMI7P//////////ARAAGgwyMjIwNDg1NjM0NjgiDGUjWD0mmKOOmlSD6Sr0AiRBr81jBg5xx9XKXilwcaPJygNHfUEnkmpeGZseTsiV7rggR8U6eyIERYWL551/GT2tnN9C4YUBkZOoXL5xr8Is2XIT0lyxNy8Do7jhVMZZC+KaD2kFe6v0vDS7fBReqgNAyVVXmZMaIFrM69bjwGFWBSL6Q3SQNO3cMSpdwn54JmVP2yiU0iTafCBqT4lcpbLtrzcOASk53JRB1qv8FwPpRox5bCdb9dq/J0xxulbdzqXFidfYRuewMKH1VtO+4fWm2IadrlR/bMqnqvTbOEEoIyQVYsOj6fZAKj2SEnMHKBJY7g7Va44fwuCAqtVmNR6r+SG7wiALECbMPCzrrgsyOrSjliKgYN5+oTNZYrcaPQxjJ4V1P0ZeGndw/FnV2M8eT/X9pCeBMuxu8OirBsgDQUBO/qmLiwxi23x3hEkZDszH94fzI5vz1sa9epTfdfa7c5i4Z8Gr/jRsEMm4/V550B6cXmXvtI1rdZvCuAXKVD5z6zCe2uShBjqmAR2XBj5DCq2t+PmlKTLrGRaERMDYiK407KctgC4j6P0tGXdkJ6LxPpPzO0PC1qV2qOoLoFE+7yeIj5U9Gkimv0lnvFo7RsELqLPWcGsq3+cb3fAJyYttmWwBYaimcDXwDIR4flSlMlPadjG15xRO+sh0GFDiYvkg3EhYVLy5OlK/io057ozNrkUTz0n2pc8rYiIDZSoO/EHKN178DrbgbmSHae6YpUo=\"\r\n    },\r\n    region: \"us-east-1\"\r\n});\r\nexport { ddbClient };\r\n\r\n","import { DynamoDBDocumentClient } from \"@aws-sdk/lib-dynamodb\";\r\nimport { ddbClient } from \"./ddb-client\";\r\n\r\nconst marshallOptions = {\r\n    // Whether to automatically convert empty strings, blobs, and sets to `null`.\r\n    convertEmptyValues: false, // false, by default.\r\n    // Whether to remove undefined values while marshalling.\r\n    removeUndefinedValues: false, // false, by default.\r\n    // Whether to convert typeof object to map attribute.\r\n    convertClassInstanceToMap: false, // false, by default.\r\n};\r\n\r\nconst unmarshallOptions = {\r\n    // Whether to return numbers as a string instead of converting them to native JavaScript numbers.\r\n    wrapNumbers: false, // false, by default.\r\n};\r\n\r\nconst translateConfig = { marshallOptions, unmarshallOptions };\r\n\r\n// Create the DynamoDB Document client.\r\nconst ddbDocClient = DynamoDBDocumentClient.from(ddbClient, translateConfig);\r\n\r\nexport { ddbDocClient };","module.exports = require(\"@aws-sdk/client-dynamodb\");","module.exports = require(\"@aws-sdk/lib-dynamodb\");","module.exports = require(\"source-map-support/register\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { ddbDocClient } from \"./ddb-doc-client\";\r\nimport { GetCommand } from '@aws-sdk/lib-dynamodb';\r\n\r\nexport const getProductsById = async (event) => {\r\n  const ProductsTableName = process.env.TABLE_NAME_PRODUCTS;\r\n  const ProductsStockTableName = process.env.TABLE_NAME_PRODUCTS_STOCK;\r\n\r\n  try {\r\n    const productId = event.pathParameters.productId;\r\n    const product = (await ddbDocClient.send(\r\n        new GetCommand({\r\n            TableName: ProductsTableName,\r\n            Key: {\r\n                id: productId\r\n            },\r\n        })\r\n    )).Item;\r\n\r\n    const productStockCount = (await ddbDocClient.send(\r\n        new GetCommand({\r\n            TableName: ProductsStockTableName,\r\n            Key: {\r\n                product_id: productId\r\n            },\r\n        })\r\n    )).Item.count;\r\n\r\n    if (!product && !productStockCount) {\r\n      throw new Error('Product was not found');\r\n    }\r\n    return {\r\n      statusCode: 200,\r\n      headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Credentials': true,\r\n        'Access-Control-Allow-Headers': '*'\r\n      },\r\n      body: JSON.stringify({...product, count: productStockCount })\r\n    };\r\n  } catch (error) {\r\n    return {\r\n      statusCode: 500,\r\n      body: error ?? { message: 'Request for product id is invalid' }\r\n    }\r\n  }\r\n};\r\n\r\n"],"names":["DynamoDBClient","REGION","ddbClient","apiVersion","credentials","accessKeyId","secretAccessKey","sessionToken","region","DynamoDBDocumentClient","marshallOptions","convertEmptyValues","removeUndefinedValues","convertClassInstanceToMap","unmarshallOptions","wrapNumbers","translateConfig","ddbDocClient","from","GetCommand","getProductsById","event","ProductsTableName","process","env","TABLE_NAME_PRODUCTS","ProductsStockTableName","TABLE_NAME_PRODUCTS_STOCK","productId","pathParameters","product","send","TableName","Key","id","Item","productStockCount","product_id","count","Error","statusCode","headers","body","JSON","stringify","error","message"],"sourceRoot":""}